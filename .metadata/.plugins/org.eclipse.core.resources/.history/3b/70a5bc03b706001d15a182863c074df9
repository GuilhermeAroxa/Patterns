package com.example.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

import com.example.demo.builder.BuilderCourse;
import com.example.demo.singleton.SingletonCourse;
import com.example.demo.singleton.SingletonCourseLazy;

@SpringBootApplication
public class DemoApplication {

	public static void main(String[] args) {
		System.out.println("================== 1 - Singleton Início ==================");
		System.out.println("Exemplos: Runtime.getRuntime\n");

			System.out.println("================== 1.1 - Static Singleton==================");
			
				SingletonCourse singletonRuntime = SingletonCourse.getInstance();
				
				System.out.println(singletonRuntime);
				
				SingletonCourse anotherRuntime = SingletonCourse.getInstance();
				
				System.out.println(anotherRuntime);
				
				if (anotherRuntime == singletonRuntime) {
					System.out.println("São iguais");
				}
			
			System.out.println("================== 1.2 - Lazy Singleton ==================");
			
				SingletonCourseLazy singletonRuntimeLazy = SingletonCourseLazy.getInstance();
				
				System.out.println(singletonRuntimeLazy);
				
				SingletonCourseLazy anotherRuntimeLazy = SingletonCourseLazy.getInstance();
				
				System.out.println(anotherRuntimeLazy);
				
				if (singletonRuntimeLazy == anotherRuntimeLazy) {
					System.out.println("São iguais");
				}
			
		System.out.println("=================================================\n");
		
		System.out.println("================== 2 - Builder ==================");
			System.out.println("Exemplos: StringBuilder, DocumentBuilder, Locale.Builder\n");
			
			BuilderCourse.Builder builder = new BuilderCourse.Builder();
			builder.author("Author").isPublic(false).title("Novo titulo").title("Novo sub titulo");
			
			BuilderCourse builderCourse  = builder.build();
			System.out.println(builderCourse);
			
			
	}

}
