package com.example.demo.singleton;


//1.2 Lazy Singleton
//É carregado na primeira instanciação da classe
//Não é thread safe da primeira forma que foi comentada

public class SingletonCourseLazy {
	
//	private static SingletonCourseLazy instance = null;
//	
//	private SingletonCourseLazy(){}
//	
//	public static SingletonCourseLazy getInstance() {
//		if (instance == null) {
//			instance = new SingletonCourseLazy();
//		}
//		return instance;
//	}
	private static volatile SingletonCourseLazy instance = null;
	
	private SingletonCourseLazy(){
		if (instance != null) {
			throw new RuntimeException("Utilize o getInstance para criar");
		}
	}
	
	public static SingletonCourseLazy getInstance() {
		if (instance == null) {
			synchronized(SingletonCourseLazy.class){
				if(instance == null) {
					instance = new SingletonCourseLazy();									
				}
			}
		}
		return instance;
	}
}