package com.example.proxy;

import java.util.List;

import twitter4j.Query;
import twitter4j.QueryResult;
import twitter4j.Status;
import twitter4j.Twitter;
import twitter4j.TwitterException;
import twitter4j.TwitterFactory;
import twitter4j.conf.ConfigurationBuilder;

public class TwitterServiceImpl implements TwitterService {

	private static final String TWITTER_CONSUMER_KEY = "QYzZuEUUMxyCHe7XzMiXmR4vD";
	private static final String TWITTER_SECRET_KEY = "A2sz9FLLpOrRTXwQqCeO1NGW8REQQF34PunCsqD30MOnqYoUjb";
	private static final String TWITTER_ACCESS_TOKEN = "1551497597164175361-9cmIPi8nKYq35Ud5Z3JWfzZiJx28tm";
	private static final String TWITTER_ACCESS_TOKEN_SECRET = "hjmWHQo0hwLjTQF0VOYuLreV1J32wYByziAXNI3wOSMdH";
	
	@Override
	public String getTimeline(String screenName) {
		
		ConfigurationBuilder cb = new ConfigurationBuilder();
		cb.setDebugEnabled(true)
		    .setOAuthConsumerKey(TWITTER_CONSUMER_KEY)
		    .setOAuthConsumerSecret(TWITTER_SECRET_KEY)
		    .setOAuthAccessToken(TWITTER_ACCESS_TOKEN)
		    .setOAuthAccessTokenSecret(TWITTER_ACCESS_TOKEN_SECRET);
		TwitterFactory tf = new TwitterFactory(cb.build());
	    Twitter twitter = TwitterFactory.getSingleton();
		StringBuilder builder = new StringBuilder();

		try {
			List<Status> statuses = twitter.getHomeTimeline();
	        for (Status status : statuses) {
	            builder.append("@" + status.getUser().getName() + " - " + status.getText());
	            builder.append("\n");
	        }
		} catch (TwitterException te) {
		    te.printStackTrace();
		    System.out.println("Failed to search tweets: " + te.getMessage());
		}
		return builder.toString();	
	}

	@Override
	public void postToTimeline(String screenName, String message) {
		//we aren't going to allow this
	}
}